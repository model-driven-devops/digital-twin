lab:
  description: ''
  notes: ''
  title: Ubuntu + 2-node Nexus Topology
  version: 0.1.0
links:
  - id: l0
    n1: n3
    n2: n4
    i1: i0
    i2: i0
    label: ext-conn-0-port<->unmanaged-switch-0-port0
  - id: l1
    n1: n0
    n2: n4
    i1: i0
    i2: i1
    label: nso1-ens2<->unmanaged-switch-0-port1
  - id: l2
    n1: n1
    n2: n4
    i1: i1
    i2: i2
    label: n9kv1-mgmt0<->unmanaged-switch-0-port2
  - id: l3
    n1: n2
    n2: n4
    i1: i1
    i2: i3
    label: n9kv2-mgmt0<->unmanaged-switch-0-port3
  - id: l4
    n1: n1
    n2: n2
    i1: i2
    i2: i2
    label: n9kv1-Ethernet1/1<->n9kv2-Ethernet1/1
nodes:
  - boot_disk_size: 0
    configuration: |-
      #cloud-config
      hostname: nso1
      manage_etc_hosts: True
      system_info:
        default_user:
          name: ubuntu
      password: admin
      chpasswd: { expire: False }
      ssh_pwauth: True
      ssh_authorized_keys:
         - your-ssh-pubkey-line-goes-here
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n0
    label: nso1
    node_definition: ubuntu
    ram: 8192
    tags: []
    x: 329
    y: 206
    interfaces:
      - id: i0
        label: ens2
        slot: 0
        type: physical
  - boot_disk_size: 0
    configuration: |-
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
      int mgmt0
      ip address dhcp
      no shut
      hostname n9kv1
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n1
    label: n9kv1
    node_definition: nxosv9000
    ram: 0
    tags: []
    x: 635
    y: 106
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: |-
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
      int mgmt0
      ip address dhcp
      no shut
      hostname n9kv2
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n2
    label: n9kv2
    node_definition: nxosv9000
    ram: 0
    tags: []
    x: 636
    y: 285
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: bridge0
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n3
    label: ext-conn-0
    node_definition: external_connector
    ram: 0
    tags: []
    x: 475
    y: 104
    interfaces:
      - id: i0
        label: port
        slot: 0
        type: physical
  - boot_disk_size: 0
    configuration: ''
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n4
    label: unmanaged-switch-0
    node_definition: unmanaged_switch
    ram: 0
    tags: []
    x: 475
    y: 206
    interfaces:
      - id: i0
        label: port0
        slot: 0
        type: physical
      - id: i1
        label: port1
        slot: 1
        type: physical
      - id: i2
        label: port2
        slot: 2
        type: physical
      - id: i3
        label: port3
        slot: 3
        type: physical
      - id: i4
        label: port4
        slot: 4
        type: physical
      - id: i5
        label: port5
        slot: 5
        type: physical
      - id: i6
        label: port6
        slot: 6
        type: physical
      - id: i7
        label: port7
        slot: 7
        type: physical
